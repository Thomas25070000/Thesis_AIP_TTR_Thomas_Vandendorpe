function writeStatsToExcel(filenameOutput, sheetOutput, settings, statistics)

% Check if the file is already open
[~,~,fileOpen] = xlsfinfo(filenameOutput);
if any(strcmp(fileOpen,'Sheet1')) || any(strcmp(fileOpen,'All'))
    error('Excel file is already open. Close the file and try again.');
end

columnnames = readtable(filenameOutput, 'Sheet', sheetOutput, 'Range', 'A1:AE1', 'VariableNamingRule','preserve');
myTable = readtable(filenameOutput, 'Sheet', sheetOutput);
versionNames= height(myTable);



newVersion = ['v' int2str(settings.general.modelVersion)];
if settings.general.modelVersion >= 9
    orderLimit = settings.TT.orderlimit;
    settings.general.subName = [settings.general.subName ' max' int2str(orderLimit)];
    newVersion = ['v' int2str(settings.general.modelVersion) ' - max. ' int2str(orderLimit)];
elseif settings.general.modelVersion == 8
    newVersion = ['v' int2str(settings.general.modelVersion) ' - hour after'];
elseif settings.general.modelVersion == 7
    newVersion = ['v' int2str(settings.general.modelVersion) ' - basic'];
end

newrow = length(versionNames) + 1;    

% We now know the row that has to be filled, start filling the columns
tobewritten = [];
tobewritten{1} = newVersion;

% Max. delay information
col = find(strcmp(columnnames,'max. delay (s)'));
tobewritten{col} = int2str(statistics.maxDelay);
col = find(strcmp(columnnames,'mD - HHMMSS'));
tobewritten{col} = statistics.maxDelay_HHMMSS;
col = find(strcmp(columnnames,'mD - dir 02'));
tobewritten{col} = statistics.maxDelay_HHMMSS_02;
col = find(strcmp(columnnames,'mD - dir 03'));
tobewritten{col} = statistics.maxDelay_HHMMSS_03;
col = find(strcmp(columnnames,'mD - dir 12'));
tobewritten{col} = statistics.maxDelay_HHMMSS_12;
col = find(strcmp(columnnames,'mD - dir 13'));
tobewritten{col} = statistics.maxDelay_HHMMSS_13;

% Total delay information
col = find(strcmp(columnnames,'total delay (s)'));
tobewritten{col} = int2str(statistics.totalDelay);
col = find(strcmp(columnnames,'tD - HHMMSS'));
tobewritten{col} = statistics.totalDelay_HHMMSS;
col = find(strcmp(columnnames,'tD - dir 02'));
tobewritten{col} = statistics.totalDelay_HHMMSS_02;
col = find(strcmp(columnnames,'tD - dir 03'));
tobewritten{col} = statistics.totalDelay_HHMMSS_03;
col = find(strcmp(columnnames,'tD - dir 12'));
tobewritten{col} = statistics.totalDelay_HHMMSS_12;
col = find(strcmp(columnnames,'tD - dir 13'));
tobewritten{col} = statistics.totalDelay_HHMMSS_13;

% Average delay information
col = find(strcmp(columnnames,'average delay (s)'));
tobewritten{col} = int2str(statistics.averageDelay);
col = find(strcmp(columnnames,'aD - HHMMSS'));
tobewritten{col} = statistics.averageDelay_HHMMSS;
col = find(strcmp(columnnames,'aD - dir 02'));
tobewritten{col} = statistics.averageDelay_HHMMSS_02;
col = find(strcmp(columnnames,'aD - dir 03'));
tobewritten{col} = statistics.averageDelay_HHMMSS_03;
col = find(strcmp(columnnames,'aD - dir 12'));
tobewritten{col} = statistics.averageDelay_HHMMSS_12;
col = find(strcmp(columnnames,'aD - dir 13'));
tobewritten{col} = statistics.averageDelay_HHMMSS_13;

% Cancellation information
col = find(strcmp(columnnames,'# cancelled'));
tobewritten{col} = int2str(statistics.nrCancelled);
col = find(strcmp(columnnames,'# cancelled - dir 02'));
tobewritten{col} = int2str(statistics.nrCancelled_dir02);
col = find(strcmp(columnnames,'# cancelled - dir 03'));
tobewritten{col} = int2str(statistics.nrCancelled_dir03);
col = find(strcmp(columnnames,'# cancelled - dir 12'));
tobewritten{col} = int2str(statistics.nrCancelled_dir12);
col = find(strcmp(columnnames,'# cancelled - dir 13'));
tobewritten{col} = int2str(statistics.nrCancelled_dir13);

% % CPU time
% col = find(strcmp(columnnames,'CPU time (s)'));
% tobewritten{col} = num2str(statistics.CPUtime);


xlsRange = ['A' int2str(newrow)];
tobewritten_table = cell2table(tobewritten);
writetable(tobewritten_table, filenameOutput, 'Sheet', sheetOutput, 'Range', xlsRange, 'WriteVariableNames', False);


end